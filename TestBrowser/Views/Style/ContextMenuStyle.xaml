<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0">

	<Style TargetType="{x:Type ContextMenu}">
		<Style.Resources>
			<Style TargetType="{x:Type Separator}">
				<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Separator}">
							<Grid SnapsToDevicePixels="True" Background="#00FFFFFF">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Rectangle Height="1" Margin="4,1,1,1" Fill="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarMenuSeparatorBrushKey}}" Grid.Column="1" />
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>
		<Setter Property="Control.Background" Value="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" />
		<Setter Property="Control.FontFamily" Value="{DynamicResource VsFont.EnvironmentFontFamily}" />
		<Setter Property="Control.FontSize" Value="{DynamicResource VsFont.EnvironmentFontSize}" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate x:Uid="ControlTemplate_2">
					<Grid x:Uid="Grid_2">
						<Border Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" BorderBrush="{DynamicResource VsBrush.CommandBarMenuBorder}" BorderThickness="1">
							<Border Width="28" Background="{DynamicResource VsBrush.CommandBarMenuIconBackground}" HorizontalAlignment="Left" />
						</Border>
						<ScrollViewer ScrollViewer.CanContentScroll="True" Margin="3" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
							<ItemsPresenter KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="True" />
						</ScrollViewer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ContextMenuItemStyle" TargetType="{x:Type MenuItem}">
		<Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Control.Background" Value="#00FFFFFF" />
		<Setter Property="Control.Foreground" Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarTextActiveBrushKey}}" />
		<Setter Property="DockPanel.Dock" Value="Top" />
		<Setter Property="Control.Padding" Value="0,2,0,2" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<Grid SnapsToDevicePixels="True" Background="#00FFFFFF" MinHeight="22">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="26" SharedSizeGroup="MenuItemIconColumnGroup" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="37" />
							<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
							<ColumnDefinition Width="17" />
						</Grid.ColumnDefinitions>
						<Rectangle Name="Bg" Stroke="#00FFFFFF" Fill="#00FFFFFF" StrokeThickness="0" Grid.ColumnSpan="5" />
						<ContentPresenter Name="Icon" Margin="2,1,4,1" Width="16" Height="16" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
						<Border Name="GlyphPanel" Background="{DynamicResource VsBrush.CommandBarSelected}" BorderBrush="{DynamicResource VsBrush.CommandBarSelectedBorder}" BorderThickness="1" Margin="1" Visibility="Collapsed" Width="18" Height="18" />
						<ContentPresenter Grid.Column="1" ContentSource="Header" Margin="8,1,0,1" VerticalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
						<TextBlock Grid.Column="3" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="Center" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Value="{x:Null}" Property="MenuItem.Icon">
							<Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="MenuItem.IsHighlighted" Value="True">
							<Setter TargetName="Bg" Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}" Property="Shape.Fill" />
							<Setter TargetName="Bg" Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}" Property="Shape.Stroke" />
							<Setter Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarMenuItemMouseOverTextBrushKey}}" Property="TextElement.Foreground" />
							<Setter TargetName="GlyphPanel" Value="{DynamicResource VsBrush.CommandBarHoverOverSelectedIcon}" Property="Border.Background" />
							<Setter TargetName="GlyphPanel" Value="{DynamicResource VsBrush.CommandBarHoverOverSelectedIconBorder}" Property="Border.BorderBrush" />
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Value="{DynamicResource VsBrush.CommandBarTextInactive}" Property="Control.Foreground" />
							<Setter TargetName="GlyphPanel" Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarSelectedIconDisabledBrushKey}}" Property="Border.Background" />
							<Setter TargetName="GlyphPanel" Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarSelectedIconDisabledBorderBrushKey}}" Property="Border.BorderBrush" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>